// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id                        String                   @id @default(uuid())
  fullName                  String
  email                     String                   @unique
  role                      Role                     @default(USER)
  phone                     String?                  @db.VarChar(11)
  gender                    Gender?
  birthDate                 DateTime?
  address                   String?
  password                  String
  avatarImage               String                   @default("")
  isOnline                  Boolean                  @default(false)
  lastActiveAt              DateTime?
  otp                       String?                  @unique
  otpExpires                DateTime?
  refreshToken              String?                  @unique

  participatedTMCTargets    ParticipatedTMCTarget[]
  participatedARVTargets    ParticipatedARVTarget[]

  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum Gender{
  MALE
  FEMALE
  OTHER
}

model Image{
  id                     String        @id @default(uuid())
  url                    String        @unique
  isUsed                 Boolean       @default(false)

  subCategory            SubCategory   @relation(fields: [subCategoryId], references: [id])
  subCategoryId          String
  category               Category      @relation(fields: [categoryId], references: [id])
  categoryId             String

  ARVTargets             ARVTargetImages[]
  TMCTargets             TMCTargetImages[]

  createdAt              DateTime      @default(now())
}

model SubCategory{
  id                     String        @id @default(uuid())
  name                   String        @unique

  images                 Image[]
  category               Category      @relation(fields: [categoryId], references: [id])
  categoryId             String

  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
}

model Category{
  id                     String        @id @default(uuid())
  name                   String

  images                 Image[]
  subCategories          SubCategory[]

  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
}

model ARVTargetImages {
  id                     String        @id @default(uuid())
  image                  Image         @relation(fields: [imageId], references: [id])
  imageId                String
  ARVTarget              ARVTarget     @relation(fields: [ARVTargetId], references: [id])
  ARVTargetId            String        
  description            String
}

model ARVTarget{
  id                      String          @id @default(uuid())
  code                    String          @unique
  eventName               String     
  eventDescription        String

  gameTime                DateTime
  revealTime              DateTime
  outcomeTime             DateTime
  bufferTime              DateTime

  controlImage            String
  resultImage             String?
  status                  TargetStatus    @default(PENDING)

  usersPlayed             ParticipatedARVTarget[]
  images                  ARVTargetImages[]  

  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
}

model TMCTargetImages {
  id                     String        @id @default(uuid())
  image                  Image         @relation(fields: [imageId], references: [id])
  imageId                String
  TMCTarget              TMCTarget     @relation(fields: [TMCTargetId], references: [id])
  TMCTargetId            String 
}

model TMCTarget{
  id                      String              @id @default(uuid())
  code                    String              @unique

  gameTime                DateTime
  revealTime              DateTime
  bufferTime              DateTime

  targetImage             String
  status                  TargetStatus        @default(PENDING)

  controlImages           TMCTargetImages[]
  usersPlayed             ParticipatedTMCTarget[]

  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt
}

enum TargetStatus{
  PENDING
  ACTIVE
  PARTIALLYACTIVE
  QUEUED
  COMPLETED
}

model ParticipatedTMCTarget{
  id                      String              @id @default(uuid())
  TMCTarget               TMCTarget           @relation(fields: [TMCTargetId], references: [id])
  TMCTargetId             String
  user                    User                @relation(fields: [userId], references: [id])
  userId                  String
}

model ParticipatedARVTarget{
  id                      String              @id @default(uuid())
  ARVTarget               ARVTarget           @relation(fields: [ARVTargetId], references: [id])
  ARVTargetId             String
  user                    User                @relation(fields: [userId], references: [id])
  userId                  String
}
